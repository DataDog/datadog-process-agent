---
version: '2.4'

services:
  zookeeper:
    image: quay.io/stackstate/zookeeper:3.6.1-focal-20210827-r37
    ports:
      - 2181:2181
    mem_limit: 1G
    environment:
      ALLOW_ANONYMOUS_LOGIN: "yes"
    healthcheck:
      test: [ "CMD-SHELL", "echo ruok | nc -w 2 zookeeper 2181" ]
      interval: 5s
      timeout: 10s
      retries: 3

  kafka:
    image: quay.io/stackstate/kafka:2.8.1-focal-20210827-r90.20220103.1605
    user: root
    ports:
      - 9092:9092
    depends_on:
      zookeeper:
        condition: service_healthy
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "sts_connection_beat_events:1:1,sts_correlate_endpoints:1:1,sts_generic_events:1:1,sts_intake_health:1:1,sts_multi_metrics:1:1,sts_state_events:1:1,sts_topo_agent_integrations:1:1,sts_topology_events:1:1,sts_topo_process_agents:1:1,sts_trace_events:1:1,sts_correlated_connections:1:1"
      ALLOW_PLAINTEXT_LISTENER: "yes"
      DOCKER_API_VERSION: 1.22
      KAFKA_HOME: "/opt/bitnami/kafka"
    volumes:
      - "./verify-or-create-topics.sh:/usr/local/bin/verify-or-create-topics.sh"
    healthcheck:
      test: [ "CMD", "verify-or-create-topics.sh" ]
      interval: 10s
      timeout: 45s
      retries: 10
    restart: always
    mem_limit: 1G

  receiver:
    image: "quay.io/stackstate/stackstate-receiver:${STACKSTATE_BRANCH}"
    ports:
      - 7077:7077
      - 1618:1618
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      KAFKA_BROKERS: kafka:9092
    restart: always
    mem_limit: 1G

  correlate:
    image: "quay.io/stackstate/stackstate-correlate:${STACKSTATE_BRANCH}"
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      KAFKA_BROKERS: kafka:9092
    restart: always
    mem_limit: 1G

  topic-api:
    image: "quay.io/stackstate/stackstate-topic-api:${STACKSTATE_BRANCH}"
    ports:
      - 7070:7070
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      KAFKA_BROKERS: kafka:9092
      ZOOKEEPER_QUORUM: kafka
    restart: always
    mem_limit: 1G

  stackstate-process-agent:
    image: stackstate/stackstate-process-agent-test:${CURRENT_BRANCH:-master}
    network_mode: "host"
    pid: "host"
    privileged: true
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "/proc/:/host/proc/:ro"
      - "/sys/fs/cgroup/:/host/sys/fs/cgroup:ro"
      - "/etc/passwd:/etc/passwd:ro"
      - "/sys/kernel/debug:/sys/kernel/debug"
    environment:
      STS_API_KEY: "API_KEY"
      STS_PROCESS_AGENT_URL: "http://localhost:7077/stsAgent"
      STS_PROCESS_AGENT_ENABLED: "true"
      STS_PROCESS_BLACKLIST_PATTERNS: "^s6-,^docker-,^/sbin/,^/usr/sbin,^/pause,^/usr/bin/dbus-daemon,^-bash,^su$$,^/bin/bash,/lib/systemd/,agent"
      HOST_PROC: "/host/proc"
      HOST_SYS: "/host/sys"
      STS_LOG_LEVEL: "debug"
      STS_LOG_TO_CONSOLE: "true"
#    healthcheck:
#      test: curl --fail -s http://localhost:5000/ || exit 1
#      interval: 1m30s
#      timeout: 10s
#      retries: 3
