stages:
  - build
  - pre_release
  - release

variables:
  SRC_PATH: /src/github.com/StackVista/stackstate-process-agent
  STS_AWS_BUCKET: stackstate-process-agent-2-test
  STS_REPO_BRANCH_NAME: $CI_COMMIT_REF_NAME
  CIRCLE_BRANCH: $CI_COMMIT_REF_NAME
  STS_DOCKER_RELEASE_REPO: stackstate-process-agent
  STS_DOCKER_TEST_REPO: stackstate-process-agent-test
  GO111MODULE: "on"
  QUAY_REGISTRY: quay.io
  DOCKER_REGISTRY: docker.io
  RUNNER_DIR_PREFIX: $CI_PROJECT_DIR/.cd-builders/runner-gitlab-
  RUNNER_CENTOS6: centos6
  RUNNER_RUNNER_BASE: centos6-runner-base
  RUNNER_RPM: rpm

build_linux:
  image: stackstate/stackstate-agent-runner-gitlab:latest7
  stage: build

  script:
    - export PATH=$GOPATH/bin:/usr/local/go/bin:$PATH
    - printenv
    - source .gitlab-scripts/build_linux.sh
  artifacts:
    paths:
      - $CI_PROJECT_DIR/process-agent
      - $CI_PROJECT_DIR/packaging/debian/*.deb
    expire_in: 2 week

# Gitlab dedicated runner in a Windows VM
build_windows:
  stage: build
  allow_failure: false
  script:
    - cd packaging && bash -c "./apply_branding.sh" && cd ..
    - call .gitlab-scripts/windows_build.cmd
  artifacts:
    expire_in: 2 weeks
    paths:
      - ./process-agent.exe
  tags:
    - agent_windows_6
  retry:
    max: 2
    when:
      - runner_system_failure
      - stuck_or_timeout_failure
      - script_failure

pre_release_windows:
  stage: pre_release
  needs:
    - build_windows
  before_script: []
  script:
    - call rake windows-versioned-artifact
    - aws.exe s3 cp . s3://stackstate-process-agent-2-test/%CI_COMMIT_REF_NAME% --recursive --exclude "*" --include "*.exe" --acl public-read
  tags:
    - agent_windows_6
  retry:
    max: 2
    when:
      - runner_system_failure
      - stuck_or_timeout_failure
      - script_failure

pre_release_linux:
  stage: pre_release
  image: stackstate/stackstate-agent-runner-gitlab:latest7
  needs:
    - build_linux
  before_script:
    - export PROCESS_AGENT_VERSION=$(packaging/version.sh)
  script:
    - ls -la $CI_PROJECT_DIR
    - ls -la $CI_PROJECT_DIR/packaging
    - cd $CI_PROJECT_DIR/packaging && ./publish_staging_package.sh

pre_release_image:
  stage: pre_release
  image: docker:18.06.0
  needs:
    - build_linux
  variables:
    DOCKER_DRIVER: overlay
    DOCKER_HOST: tcp://docker:2375
    DOCKER_TLS_CERTDIR: ""
  services:
    - docker:18.09-dind
  script:
    - cd $CI_PROJECT_DIR
    - ./packaging/publish_image.sh $CI_COMMIT_REF_NAME $STS_DOCKER_TEST_REPO $CI_PROJECT_DIR/process-agent

release_image:
  stage: release
  image: docker:18.06.0
  needs:
    - build_linux
  variables:
    DOCKER_DRIVER: overlay
    DOCKER_HOST: tcp://docker:2375
    DOCKER_TLS_CERTDIR: ""
  services:
    - docker:18.09-dind
  script:
    - cd $CI_PROJECT_DIR
    - export PUSH_LATEST=true
    - ./packaging/publish_image.sh $CI_COMMIT_REF_NAME $STS_DOCKER_RELEASE_REPO $CI_PROJECT_DIR/process-agent $PUSH_LATEST
  when: manual
  only:
    - tags
    - trigger

.docker_vars: &docker_vars
  DOCKER_DRIVER: overlay
  DOCKER_HOST: tcp://docker:2375
  DOCKER_TLS_CERTDIR: ""

.runner_base: &runner_base
  stage: build
  image: docker:18.06.0
  services:
    - docker:18.09-dind
  retry:
    max: 2
    when:
      - always
  rules:
    - when: manual
  before_script:
    - docker login -u "${docker_user}" -p "${docker_password}" "${DOCKER_REGISTRY}"
    - docker login -u "${quay_user}" -p "${quay_password}" "${QUAY_REGISTRY}"
  script:
    - cd $RUNNER_DIR_PREFIX$RUNNER
    - RUNTIMETAG=$(shell date +%Y%m%d)
    - docker build -t stackstate/stackstate-process-agent-runner-gitlab:$(RUNNER)-$(RUNTIMETAG) .
    - docker push stackstate/stackstate-process-agent-runner-gitlab:$(RUNNER)-$(RUNTIMETAG)

build_centos6:
  <<: *runner_base
  variables:
    <<: *docker_vars
    RUNNER: $RUNNER_CENTOS6

build_runner_base:
  <<: *runner_base
  variables:
    <<: *docker_vars
    RUNNER: $RUNNER_RUNNER_BASE

build_rpm:
  <<: *runner_base
  variables:
    <<: *docker_vars
    RUNNER: $RUNNER_RPM